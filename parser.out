Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    FOR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement statement_list
Rule 3     statement_list -> statement
Rule 4     statement -> declaration
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> print_statement
Rule 8     declaration -> TYPE ID SEMICOLON
Rule 9     declaration -> TYPE ID ASSIGN expression SEMICOLON
Rule 10    assignment -> ID ASSIGN expression SEMICOLON
Rule 11    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 12    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 13    print_statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 14    expression -> term
Rule 15    expression -> expression PLUS term
Rule 16    expression -> expression MINUS term
Rule 17    expression -> expression LT term
Rule 18    expression -> expression LE term
Rule 19    expression -> expression EQ term
Rule 20    expression -> expression GT term
Rule 21    expression -> expression GE term
Rule 22    expression -> expression NE term
Rule 23    term -> factor
Rule 24    term -> term MULTIPLY factor
Rule 25    term -> term DIVIDE factor
Rule 26    factor -> NUMBER
Rule 27    factor -> STRING
Rule 28    factor -> ID

Terminals, with rules where they appear

ASSIGN               : 9 10
COMMA                : 
DIVIDE               : 25
ELSE                 : 11
EQ                   : 19
FOR                  : 
GE                   : 21
GT                   : 20
ID                   : 8 9 10 28
IF                   : 11 12
LBRACE               : 11 11 12
LE                   : 18
LPAREN               : 11 12 13
LT                   : 17
MINUS                : 16
MULTIPLY             : 24
NE                   : 22
NUMBER               : 26
PLUS                 : 15
PRINT                : 13
RBRACE               : 11 11 12
RPAREN               : 11 12 13
SEMICOLON            : 8 9 10 13
STRING               : 27
TYPE                 : 8 9
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 5
declaration          : 4
expression           : 9 10 11 12 13 15 16 17 18 19 20 21 22
factor               : 23 24 25
if_statement         : 6
print_statement      : 7
program              : 0
statement            : 2 3
statement_list       : 1 2 11 11 12
term                 : 14 15 16 17 18 19 20 21 22 24 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement statement_list
    (3) statement_list -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . print_statement
    (8) declaration -> . TYPE ID SEMICOLON
    (9) declaration -> . TYPE ID ASSIGN expression SEMICOLON
    (10) assignment -> . ID ASSIGN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (13) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON

    TYPE            shift and go to state 8
    ID              shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    print_statement                shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .

    $end            reduce using rule 1 (program -> statement_list .)


state 3

    (2) statement_list -> statement . statement_list
    (3) statement_list -> statement .
    (2) statement_list -> . statement statement_list
    (3) statement_list -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . print_statement
    (8) declaration -> . TYPE ID SEMICOLON
    (9) declaration -> . TYPE ID ASSIGN expression SEMICOLON
    (10) assignment -> . ID ASSIGN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (13) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON

    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)
    TYPE            shift and go to state 8
    ID              shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    statement                      shift and go to state 3
    statement_list                 shift and go to state 12
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    print_statement                shift and go to state 7

state 4

    (4) statement -> declaration .

    TYPE            reduce using rule 4 (statement -> declaration .)
    ID              reduce using rule 4 (statement -> declaration .)
    IF              reduce using rule 4 (statement -> declaration .)
    PRINT           reduce using rule 4 (statement -> declaration .)
    $end            reduce using rule 4 (statement -> declaration .)
    RBRACE          reduce using rule 4 (statement -> declaration .)


state 5

    (5) statement -> assignment .

    TYPE            reduce using rule 5 (statement -> assignment .)
    ID              reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    PRINT           reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    RBRACE          reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> if_statement .

    TYPE            reduce using rule 6 (statement -> if_statement .)
    ID              reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> print_statement .

    TYPE            reduce using rule 7 (statement -> print_statement .)
    ID              reduce using rule 7 (statement -> print_statement .)
    IF              reduce using rule 7 (statement -> print_statement .)
    PRINT           reduce using rule 7 (statement -> print_statement .)
    $end            reduce using rule 7 (statement -> print_statement .)
    RBRACE          reduce using rule 7 (statement -> print_statement .)


state 8

    (8) declaration -> TYPE . ID SEMICOLON
    (9) declaration -> TYPE . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 13


state 9

    (10) assignment -> ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 14


state 10

    (11) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 15


state 11

    (13) print_statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 16


state 12

    (2) statement_list -> statement statement_list .

    $end            reduce using rule 2 (statement_list -> statement statement_list .)
    RBRACE          reduce using rule 2 (statement_list -> statement statement_list .)


state 13

    (8) declaration -> TYPE ID . SEMICOLON
    (9) declaration -> TYPE ID . ASSIGN expression SEMICOLON

    SEMICOLON       shift and go to state 17
    ASSIGN          shift and go to state 18


state 14

    (10) assignment -> ID ASSIGN . expression SEMICOLON
    (14) expression -> . term
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT term
    (18) expression -> . expression LE term
    (19) expression -> . expression EQ term
    (20) expression -> . expression GT term
    (21) expression -> . expression GE term
    (22) expression -> . expression NE term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    expression                     shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 22

state 15

    (11) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (14) expression -> . term
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT term
    (18) expression -> . expression LE term
    (19) expression -> . expression EQ term
    (20) expression -> . expression GT term
    (21) expression -> . expression GE term
    (22) expression -> . expression NE term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    expression                     shift and go to state 25
    term                           shift and go to state 21
    factor                         shift and go to state 22

state 16

    (13) print_statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (14) expression -> . term
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT term
    (18) expression -> . expression LE term
    (19) expression -> . expression EQ term
    (20) expression -> . expression GT term
    (21) expression -> . expression GE term
    (22) expression -> . expression NE term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    expression                     shift and go to state 26
    term                           shift and go to state 21
    factor                         shift and go to state 22

state 17

    (8) declaration -> TYPE ID SEMICOLON .

    TYPE            reduce using rule 8 (declaration -> TYPE ID SEMICOLON .)
    ID              reduce using rule 8 (declaration -> TYPE ID SEMICOLON .)
    IF              reduce using rule 8 (declaration -> TYPE ID SEMICOLON .)
    PRINT           reduce using rule 8 (declaration -> TYPE ID SEMICOLON .)
    $end            reduce using rule 8 (declaration -> TYPE ID SEMICOLON .)
    RBRACE          reduce using rule 8 (declaration -> TYPE ID SEMICOLON .)


state 18

    (9) declaration -> TYPE ID ASSIGN . expression SEMICOLON
    (14) expression -> . term
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT term
    (18) expression -> . expression LE term
    (19) expression -> . expression EQ term
    (20) expression -> . expression GT term
    (21) expression -> . expression GE term
    (22) expression -> . expression NE term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    expression                     shift and go to state 27
    term                           shift and go to state 21
    factor                         shift and go to state 22

state 19

    (28) factor -> ID .

    MULTIPLY        reduce using rule 28 (factor -> ID .)
    DIVIDE          reduce using rule 28 (factor -> ID .)
    SEMICOLON       reduce using rule 28 (factor -> ID .)
    PLUS            reduce using rule 28 (factor -> ID .)
    MINUS           reduce using rule 28 (factor -> ID .)
    LT              reduce using rule 28 (factor -> ID .)
    LE              reduce using rule 28 (factor -> ID .)
    EQ              reduce using rule 28 (factor -> ID .)
    GT              reduce using rule 28 (factor -> ID .)
    GE              reduce using rule 28 (factor -> ID .)
    NE              reduce using rule 28 (factor -> ID .)
    RPAREN          reduce using rule 28 (factor -> ID .)


state 20

    (10) assignment -> ID ASSIGN expression . SEMICOLON
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT term
    (18) expression -> expression . LE term
    (19) expression -> expression . EQ term
    (20) expression -> expression . GT term
    (21) expression -> expression . GE term
    (22) expression -> expression . NE term

    SEMICOLON       shift and go to state 28
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    LT              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    NE              shift and go to state 36


state 21

    (14) expression -> term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 14 (expression -> term .)
    PLUS            reduce using rule 14 (expression -> term .)
    MINUS           reduce using rule 14 (expression -> term .)
    LT              reduce using rule 14 (expression -> term .)
    LE              reduce using rule 14 (expression -> term .)
    EQ              reduce using rule 14 (expression -> term .)
    GT              reduce using rule 14 (expression -> term .)
    GE              reduce using rule 14 (expression -> term .)
    NE              reduce using rule 14 (expression -> term .)
    RPAREN          reduce using rule 14 (expression -> term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 22

    (23) term -> factor .

    MULTIPLY        reduce using rule 23 (term -> factor .)
    DIVIDE          reduce using rule 23 (term -> factor .)
    SEMICOLON       reduce using rule 23 (term -> factor .)
    PLUS            reduce using rule 23 (term -> factor .)
    MINUS           reduce using rule 23 (term -> factor .)
    LT              reduce using rule 23 (term -> factor .)
    LE              reduce using rule 23 (term -> factor .)
    EQ              reduce using rule 23 (term -> factor .)
    GT              reduce using rule 23 (term -> factor .)
    GE              reduce using rule 23 (term -> factor .)
    NE              reduce using rule 23 (term -> factor .)
    RPAREN          reduce using rule 23 (term -> factor .)


state 23

    (26) factor -> NUMBER .

    MULTIPLY        reduce using rule 26 (factor -> NUMBER .)
    DIVIDE          reduce using rule 26 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 26 (factor -> NUMBER .)
    PLUS            reduce using rule 26 (factor -> NUMBER .)
    MINUS           reduce using rule 26 (factor -> NUMBER .)
    LT              reduce using rule 26 (factor -> NUMBER .)
    LE              reduce using rule 26 (factor -> NUMBER .)
    EQ              reduce using rule 26 (factor -> NUMBER .)
    GT              reduce using rule 26 (factor -> NUMBER .)
    GE              reduce using rule 26 (factor -> NUMBER .)
    NE              reduce using rule 26 (factor -> NUMBER .)
    RPAREN          reduce using rule 26 (factor -> NUMBER .)


state 24

    (27) factor -> STRING .

    MULTIPLY        reduce using rule 27 (factor -> STRING .)
    DIVIDE          reduce using rule 27 (factor -> STRING .)
    SEMICOLON       reduce using rule 27 (factor -> STRING .)
    PLUS            reduce using rule 27 (factor -> STRING .)
    MINUS           reduce using rule 27 (factor -> STRING .)
    LT              reduce using rule 27 (factor -> STRING .)
    LE              reduce using rule 27 (factor -> STRING .)
    EQ              reduce using rule 27 (factor -> STRING .)
    GT              reduce using rule 27 (factor -> STRING .)
    GE              reduce using rule 27 (factor -> STRING .)
    NE              reduce using rule 27 (factor -> STRING .)
    RPAREN          reduce using rule 27 (factor -> STRING .)


state 25

    (11) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT term
    (18) expression -> expression . LE term
    (19) expression -> expression . EQ term
    (20) expression -> expression . GT term
    (21) expression -> expression . GE term
    (22) expression -> expression . NE term

    RPAREN          shift and go to state 39
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    LT              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    NE              shift and go to state 36


state 26

    (13) print_statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT term
    (18) expression -> expression . LE term
    (19) expression -> expression . EQ term
    (20) expression -> expression . GT term
    (21) expression -> expression . GE term
    (22) expression -> expression . NE term

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    LT              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    NE              shift and go to state 36


state 27

    (9) declaration -> TYPE ID ASSIGN expression . SEMICOLON
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT term
    (18) expression -> expression . LE term
    (19) expression -> expression . EQ term
    (20) expression -> expression . GT term
    (21) expression -> expression . GE term
    (22) expression -> expression . NE term

    SEMICOLON       shift and go to state 41
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    LT              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    NE              shift and go to state 36


state 28

    (10) assignment -> ID ASSIGN expression SEMICOLON .

    TYPE            reduce using rule 10 (assignment -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 10 (assignment -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 10 (assignment -> ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 10 (assignment -> ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 10 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 10 (assignment -> ID ASSIGN expression SEMICOLON .)


state 29

    (15) expression -> expression PLUS . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 42
    factor                         shift and go to state 22

state 30

    (16) expression -> expression MINUS . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 43
    factor                         shift and go to state 22

state 31

    (17) expression -> expression LT . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 44
    factor                         shift and go to state 22

state 32

    (18) expression -> expression LE . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 45
    factor                         shift and go to state 22

state 33

    (19) expression -> expression EQ . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 46
    factor                         shift and go to state 22

state 34

    (20) expression -> expression GT . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 47
    factor                         shift and go to state 22

state 35

    (21) expression -> expression GE . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 48
    factor                         shift and go to state 22

state 36

    (22) expression -> expression NE . term
    (23) term -> . factor
    (24) term -> . term MULTIPLY factor
    (25) term -> . term DIVIDE factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    term                           shift and go to state 49
    factor                         shift and go to state 22

state 37

    (24) term -> term MULTIPLY . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    factor                         shift and go to state 50

state 38

    (25) term -> term DIVIDE . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID

    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    ID              shift and go to state 19

    factor                         shift and go to state 51

state 39

    (11) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 52


state 40

    (13) print_statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 53


state 41

    (9) declaration -> TYPE ID ASSIGN expression SEMICOLON .

    TYPE            reduce using rule 9 (declaration -> TYPE ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 9 (declaration -> TYPE ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 9 (declaration -> TYPE ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 9 (declaration -> TYPE ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 9 (declaration -> TYPE ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 9 (declaration -> TYPE ID ASSIGN expression SEMICOLON .)


state 42

    (15) expression -> expression PLUS term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 15 (expression -> expression PLUS term .)
    PLUS            reduce using rule 15 (expression -> expression PLUS term .)
    MINUS           reduce using rule 15 (expression -> expression PLUS term .)
    LT              reduce using rule 15 (expression -> expression PLUS term .)
    LE              reduce using rule 15 (expression -> expression PLUS term .)
    EQ              reduce using rule 15 (expression -> expression PLUS term .)
    GT              reduce using rule 15 (expression -> expression PLUS term .)
    GE              reduce using rule 15 (expression -> expression PLUS term .)
    NE              reduce using rule 15 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 43

    (16) expression -> expression MINUS term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 16 (expression -> expression MINUS term .)
    PLUS            reduce using rule 16 (expression -> expression MINUS term .)
    MINUS           reduce using rule 16 (expression -> expression MINUS term .)
    LT              reduce using rule 16 (expression -> expression MINUS term .)
    LE              reduce using rule 16 (expression -> expression MINUS term .)
    EQ              reduce using rule 16 (expression -> expression MINUS term .)
    GT              reduce using rule 16 (expression -> expression MINUS term .)
    GE              reduce using rule 16 (expression -> expression MINUS term .)
    NE              reduce using rule 16 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 44

    (17) expression -> expression LT term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 17 (expression -> expression LT term .)
    PLUS            reduce using rule 17 (expression -> expression LT term .)
    MINUS           reduce using rule 17 (expression -> expression LT term .)
    LT              reduce using rule 17 (expression -> expression LT term .)
    LE              reduce using rule 17 (expression -> expression LT term .)
    EQ              reduce using rule 17 (expression -> expression LT term .)
    GT              reduce using rule 17 (expression -> expression LT term .)
    GE              reduce using rule 17 (expression -> expression LT term .)
    NE              reduce using rule 17 (expression -> expression LT term .)
    RPAREN          reduce using rule 17 (expression -> expression LT term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 45

    (18) expression -> expression LE term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (expression -> expression LE term .)
    PLUS            reduce using rule 18 (expression -> expression LE term .)
    MINUS           reduce using rule 18 (expression -> expression LE term .)
    LT              reduce using rule 18 (expression -> expression LE term .)
    LE              reduce using rule 18 (expression -> expression LE term .)
    EQ              reduce using rule 18 (expression -> expression LE term .)
    GT              reduce using rule 18 (expression -> expression LE term .)
    GE              reduce using rule 18 (expression -> expression LE term .)
    NE              reduce using rule 18 (expression -> expression LE term .)
    RPAREN          reduce using rule 18 (expression -> expression LE term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 46

    (19) expression -> expression EQ term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (expression -> expression EQ term .)
    PLUS            reduce using rule 19 (expression -> expression EQ term .)
    MINUS           reduce using rule 19 (expression -> expression EQ term .)
    LT              reduce using rule 19 (expression -> expression EQ term .)
    LE              reduce using rule 19 (expression -> expression EQ term .)
    EQ              reduce using rule 19 (expression -> expression EQ term .)
    GT              reduce using rule 19 (expression -> expression EQ term .)
    GE              reduce using rule 19 (expression -> expression EQ term .)
    NE              reduce using rule 19 (expression -> expression EQ term .)
    RPAREN          reduce using rule 19 (expression -> expression EQ term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 47

    (20) expression -> expression GT term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (expression -> expression GT term .)
    PLUS            reduce using rule 20 (expression -> expression GT term .)
    MINUS           reduce using rule 20 (expression -> expression GT term .)
    LT              reduce using rule 20 (expression -> expression GT term .)
    LE              reduce using rule 20 (expression -> expression GT term .)
    EQ              reduce using rule 20 (expression -> expression GT term .)
    GT              reduce using rule 20 (expression -> expression GT term .)
    GE              reduce using rule 20 (expression -> expression GT term .)
    NE              reduce using rule 20 (expression -> expression GT term .)
    RPAREN          reduce using rule 20 (expression -> expression GT term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 48

    (21) expression -> expression GE term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 21 (expression -> expression GE term .)
    PLUS            reduce using rule 21 (expression -> expression GE term .)
    MINUS           reduce using rule 21 (expression -> expression GE term .)
    LT              reduce using rule 21 (expression -> expression GE term .)
    LE              reduce using rule 21 (expression -> expression GE term .)
    EQ              reduce using rule 21 (expression -> expression GE term .)
    GT              reduce using rule 21 (expression -> expression GE term .)
    GE              reduce using rule 21 (expression -> expression GE term .)
    NE              reduce using rule 21 (expression -> expression GE term .)
    RPAREN          reduce using rule 21 (expression -> expression GE term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 49

    (22) expression -> expression NE term .
    (24) term -> term . MULTIPLY factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 22 (expression -> expression NE term .)
    PLUS            reduce using rule 22 (expression -> expression NE term .)
    MINUS           reduce using rule 22 (expression -> expression NE term .)
    LT              reduce using rule 22 (expression -> expression NE term .)
    LE              reduce using rule 22 (expression -> expression NE term .)
    EQ              reduce using rule 22 (expression -> expression NE term .)
    GT              reduce using rule 22 (expression -> expression NE term .)
    GE              reduce using rule 22 (expression -> expression NE term .)
    NE              reduce using rule 22 (expression -> expression NE term .)
    RPAREN          reduce using rule 22 (expression -> expression NE term .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38


state 50

    (24) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 24 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 24 (term -> term MULTIPLY factor .)
    SEMICOLON       reduce using rule 24 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 24 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 24 (term -> term MULTIPLY factor .)
    LT              reduce using rule 24 (term -> term MULTIPLY factor .)
    LE              reduce using rule 24 (term -> term MULTIPLY factor .)
    EQ              reduce using rule 24 (term -> term MULTIPLY factor .)
    GT              reduce using rule 24 (term -> term MULTIPLY factor .)
    GE              reduce using rule 24 (term -> term MULTIPLY factor .)
    NE              reduce using rule 24 (term -> term MULTIPLY factor .)
    RPAREN          reduce using rule 24 (term -> term MULTIPLY factor .)


state 51

    (25) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 25 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 25 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 25 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 25 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 25 (term -> term DIVIDE factor .)
    LT              reduce using rule 25 (term -> term DIVIDE factor .)
    LE              reduce using rule 25 (term -> term DIVIDE factor .)
    EQ              reduce using rule 25 (term -> term DIVIDE factor .)
    GT              reduce using rule 25 (term -> term DIVIDE factor .)
    GE              reduce using rule 25 (term -> term DIVIDE factor .)
    NE              reduce using rule 25 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 25 (term -> term DIVIDE factor .)


state 52

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement statement_list
    (3) statement_list -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . print_statement
    (8) declaration -> . TYPE ID SEMICOLON
    (9) declaration -> . TYPE ID ASSIGN expression SEMICOLON
    (10) assignment -> . ID ASSIGN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (13) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON

    TYPE            shift and go to state 8
    ID              shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    statement_list                 shift and go to state 54
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    print_statement                shift and go to state 7

state 53

    (13) print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    TYPE            reduce using rule 13 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 13 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 13 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 13 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 13 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 13 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 54

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 55


state 55

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .

    ELSE            shift and go to state 56
    TYPE            reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 56

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 57


state 57

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement statement_list
    (3) statement_list -> . statement
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . print_statement
    (8) declaration -> . TYPE ID SEMICOLON
    (9) declaration -> . TYPE ID ASSIGN expression SEMICOLON
    (10) assignment -> . ID ASSIGN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (13) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON

    TYPE            shift and go to state 8
    ID              shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    statement_list                 shift and go to state 58
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    print_statement                shift and go to state 7

state 58

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 59


state 59

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    TYPE            reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

